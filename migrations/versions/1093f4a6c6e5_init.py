"""init

Revision ID: 1093f4a6c6e5
Revises: 
Create Date: 2021-11-10 00:18:35.707057

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = '1093f4a6c6e5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organization',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=256), nullable=False),
    sa.Column('access_code', sqlmodel.sql.sqltypes.AutoString(length=6), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organization_access_code'), 'organization', ['access_code'], unique=False)
    op.create_index(op.f('ix_organization_id'), 'organization', ['id'], unique=False)
    op.create_index(op.f('ix_organization_name'), 'organization', ['name'], unique=False)
    op.create_table('beacon',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(length=35), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('major', sa.Integer(), nullable=False),
    sa.Column('minor', sa.Integer(), nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_beacon_id'), 'beacon', ['id'], unique=False)
    op.create_index(op.f('ix_beacon_latitude'), 'beacon', ['latitude'], unique=False)
    op.create_index(op.f('ix_beacon_longitude'), 'beacon', ['longitude'], unique=False)
    op.create_index(op.f('ix_beacon_major'), 'beacon', ['major'], unique=False)
    op.create_index(op.f('ix_beacon_minor'), 'beacon', ['minor'], unique=False)
    op.create_index(op.f('ix_beacon_organization_id'), 'beacon', ['organization_id'], unique=False)
    op.create_index(op.f('ix_beacon_status'), 'beacon', ['status'], unique=False)
    op.create_table('report',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.Column('infection_type', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_report_id'), 'report', ['id'], unique=False)
    op.create_index(op.f('ix_report_infection_type'), 'report', ['infection_type'], unique=False)
    op.create_index(op.f('ix_report_organization_id'), 'report', ['organization_id'], unique=False)
    op.create_table('path',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('report_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['report_id'], ['report.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_path_id'), 'path', ['id'], unique=False)
    op.create_index(op.f('ix_path_report_id'), 'path', ['report_id'], unique=False)
    op.create_table('point',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('beacon_id', sqlmodel.sql.sqltypes.AutoString(length=35), nullable=True),
    sa.Column('path_id', sa.Integer(), nullable=True),
    sa.Column('initial_timestamp', sa.DateTime(), nullable=False),
    sa.Column('final_timestamp', sa.DateTime(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['beacon_id'], ['beacon.id'], ),
    sa.ForeignKeyConstraint(['path_id'], ['path.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_point_beacon_id'), 'point', ['beacon_id'], unique=False)
    op.create_index(op.f('ix_point_final_timestamp'), 'point', ['final_timestamp'], unique=False)
    op.create_index(op.f('ix_point_id'), 'point', ['id'], unique=False)
    op.create_index(op.f('ix_point_initial_timestamp'), 'point', ['initial_timestamp'], unique=False)
    op.create_index(op.f('ix_point_latitude'), 'point', ['latitude'], unique=False)
    op.create_index(op.f('ix_point_longitude'), 'point', ['longitude'], unique=False)
    op.create_index(op.f('ix_point_path_id'), 'point', ['path_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_point_path_id'), table_name='point')
    op.drop_index(op.f('ix_point_longitude'), table_name='point')
    op.drop_index(op.f('ix_point_latitude'), table_name='point')
    op.drop_index(op.f('ix_point_initial_timestamp'), table_name='point')
    op.drop_index(op.f('ix_point_id'), table_name='point')
    op.drop_index(op.f('ix_point_final_timestamp'), table_name='point')
    op.drop_index(op.f('ix_point_beacon_id'), table_name='point')
    op.drop_table('point')
    op.drop_index(op.f('ix_path_report_id'), table_name='path')
    op.drop_index(op.f('ix_path_id'), table_name='path')
    op.drop_table('path')
    op.drop_index(op.f('ix_report_organization_id'), table_name='report')
    op.drop_index(op.f('ix_report_infection_type'), table_name='report')
    op.drop_index(op.f('ix_report_id'), table_name='report')
    op.drop_table('report')
    op.drop_index(op.f('ix_beacon_status'), table_name='beacon')
    op.drop_index(op.f('ix_beacon_organization_id'), table_name='beacon')
    op.drop_index(op.f('ix_beacon_minor'), table_name='beacon')
    op.drop_index(op.f('ix_beacon_major'), table_name='beacon')
    op.drop_index(op.f('ix_beacon_longitude'), table_name='beacon')
    op.drop_index(op.f('ix_beacon_latitude'), table_name='beacon')
    op.drop_index(op.f('ix_beacon_id'), table_name='beacon')
    op.drop_table('beacon')
    op.drop_index(op.f('ix_organization_name'), table_name='organization')
    op.drop_index(op.f('ix_organization_id'), table_name='organization')
    op.drop_index(op.f('ix_organization_access_code'), table_name='organization')
    op.drop_table('organization')
    # ### end Alembic commands ###
